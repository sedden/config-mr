#!/bin/bash

GIT_URL_REGEX='^(([a-z+]+)://)?(([-a-zA-Z0-9\._]+)?@?([-a-zA-Z0-9\._]+):?([1-9][0-9]+)?)?([-a-zA-Z0-9\./_~]+)$'

setup_gerrit() {
    cd "$MR_REPO"
    remote=$(git ls-remote --get-url)
    if [[ $remote =~ $GIT_URL_REGEX ]]
    then
        user="${BASH_REMATCH[4]}"
        host="${BASH_REMATCH[5]}"
        port="${BASH_REMATCH[6]}"

        if [ "$port" == "29418" ] && [ ! -f .git/hooks/commit-msg ]
        then
            scp -P 29418 $user@$host:hooks/commit-msg .git/hooks/
        fi
    fi
}

fix_remote_host() {
    if [ $# != 2 ]; then
        error "$MR_REPO: invoked fix_remote_host $*"
        exit 1
    fi

    cd "$MR_REPO"
    remote=$(git ls-remote --get-url)
    if [[ $remote =~ $GIT_URL_REGEX ]]
    then
        proto="${BASH_REMATCH[2]}"
        user="${BASH_REMATCH[4]}"
        host="${BASH_REMATCH[5]}"
        port="${BASH_REMATCH[6]}"
        path="${BASH_REMATCH[7]}"

        if [ "$host" == "$1" ] && [ -n "$user" ] && [ -n "$port" ]
        then
            git remote set-url origin $proto://$user@$2:$port$path
        fi
    fi
}

setup_email () {
    if [ $# != 1 ]; then
        error "$MR_REPO: invoked setup_email $*"
        exit 1
    fi

    cd "$MR_REPO"
    existing=$( git config user.email || true )
    if [ "$1" != "$existing" ]; then
        git config user.email "$1"
        info "Set user.email from ${existing:-(none)} to $1"
    fi
}

